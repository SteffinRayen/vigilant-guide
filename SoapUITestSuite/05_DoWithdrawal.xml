<?xml version="1.0" encoding="UTF-8"?>
<con:testCase id="bdefaadb-6414-4d9f-bd12-47e146d80374" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="05_DoWithdrawal" searchProperties="true" timeout="0" maxResults="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" disabled="true" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="bdefaadb-6414-4d9f-bd12-47e146d80374fileName">05_DoWithdrawal</con:setting></con:settings><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="98a5d079-787d-4a0f-a75b-4a95d4579547"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>fromAccountID</con:name><con:value>2008</con:value></con:property><con:property><con:name>amount</con:name><con:value>500</con:value></con:property><con:property><con:name>loopIndex</con:name><con:value>10</con:value></con:property><con:property><con:name>loopEnd</con:name><con:value>10</con:value></con:property><con:property><con:name>transactionID</con:name><con:value>3013</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Initialize" id="42558d2e-bdb6-4fc4-ba28-702ef2b0b082"><con:settings/><con:config><script>propTestStep = context.testCase.getTestStepByName("Properties")
propTestStep.setPropertyValue("loopIndex","1")
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC Request" id="d076a8a9-7d7f-43f2-93cf-c96f1bb11c47"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName xsi:nil="true"/><con:driver>com.mysql.jdbc.Driver</con:driver><con:connectionString>jdbc:mysql://localhost:3306/soapui?user=user&amp;password=PASS_VALUE</con:connectionString><con:password>root</con:password><con:connectionProperties/><con:query>SELECT `fromAccountID`, `amount` FROM `withdraw`</con:query><con:storedProcedure>false</con:storedProcedure><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="JDBCDataSource" id="61186993-d1cc-4079-9ae3-1110548c42df"><con:settings/><con:config><script>import java.util.Random
Random random = new Random()
def myTestCase = context.testCase 
propTestStep = myTestCase.getTestStepByName("Properties") 
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def holder = groovyUtils.getXmlHolder("JDBC Request#ResponseAsXML")
def counter = Integer.parseInt(propTestStep.getPropertyValue("loopIndex"))
def fromAccount =  holder.getNodeValue("//Row["+counter+"]/withdraw.fromAccountID/text()") 
def amount = holder.getNodeValue("//Row["+counter+"]/withdraw.amount/text()") 
propTestStep.setPropertyValue("fromAccountID", fromAccount)
propTestStep.setPropertyValue("amount", amount)</script></con:config></con:testStep><con:testStep type="request" id="faed5a68-5530-47c0-b1d3-097b7344c70d" name="doWithdraw"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BankServiceSoapBinding</con:interface><con:operation>doWithdraw</con:operation><con:request name="doWithdraw" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a107bcab-eb92-4e1b-a1e3-50e7e57934e5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/redesigned-invention/services/BankService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ser:doWithdraw>\r
         <ser:account_id>${Properties#fromAccountID}</ser:account_id>\r
         <ser:amount>${Properties#amount}</ser:amount>\r
      </ser:doWithdraw>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="ef308737-b790-4bb8-86e6-89104342ece7" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="0cdb4b71-07bc-4ced-8d32-fd9310d30af4" name="Not SOAP Fault"/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://service.com/BankService/doWithdrawRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="f2fc730d-6e03-4650-b95c-d6593490e1be"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>transactionID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>doWithdraw</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://model.com';
declare namespace ns2='http://service.com';
//ns2:transaction_id/text()</con:sourcePath><con:targetType>transactionID</con:targetType><con:targetStep>Properties</con:targetStep><con:targetPath/><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" id="a8ef8472-db6b-45cd-9d46-6db4f42b4f48" name="getAllAccountData"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BankServiceSoapBinding</con:interface><con:operation>getAllAccountData</con:operation><con:request name="getAllAccountData" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="6f75c579-14ed-46c9-bcff-30321eb8df65"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/redesigned-invention/services/BankService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ser:getAllAccountData/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="207c81a5-f50d-4093-825b-6ec0528e0cfd" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="9071723c-fb4c-470f-ab97-8a29a5424bbf" name="Not SOAP Fault"/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://service.com/BankService/getAllAccountDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="69d9413a-86e4-44ee-88b7-69a22e55dcd0" name="getAllTransactionData"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BankServiceSoapBinding</con:interface><con:operation>getAllTransactionData</con:operation><con:request name="getAllTransactionData" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="849ff1ab-6490-4165-8dcc-acb4ddbe7999"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/redesigned-invention/services/BankService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ser:getAllTransactionData/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c0cfedad-e74c-4728-897e-18a599023482" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="bff46ab5-4224-40c6-8a8b-6ace86f72ac9" name="Not SOAP Fault"/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://service.com/BankService/getAllTransactionDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Looper" id="7e6041b6-df8b-418d-8ee9-f19fe31cca32"><con:settings/><con:config><script>def myTestCase = context.testCase 
propTestStep = myTestCase.getTestStepByName("Properties") 

def localloopIndex = propTestStep.getPropertyValue("loopIndex") as Integer
def localloopEnd = propTestStep.getPropertyValue("loopEnd") as Integer
if(  localloopIndex   &lt; localloopEnd ){
	propTestStep.setPropertyValue("loopIndex", (localloopIndex  + 1) as String)	
	testRunner.gotoStepByName( "JDBCDataSource" )
}



</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>2d61efe1-c0a0-41aa-9eb6-1477f85d6079</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase>
