<?xml version="1.0" encoding="UTF-8"?>
<con:testCase id="a9f868c1-d05d-43e6-bd91-5330ca68f71b" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="05_DoWithdrawal" searchProperties="true" timeout="0" maxResults="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="a9f868c1-d05d-43e6-bd91-5330ca68f71bfileName">05_DoWithdrawal</con:setting></con:settings><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="715f29dc-b147-4021-aa5b-49c17bec7167"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>fromAccountID</con:name><con:value>2008</con:value></con:property><con:property><con:name>amount</con:name><con:value>500</con:value></con:property><con:property><con:name>loopIndex</con:name><con:value>10</con:value></con:property><con:property><con:name>loopEnd</con:name><con:value>10</con:value></con:property><con:property><con:name>transactionID</con:name><con:value>3158</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Initialize" id="fd1928f9-5ebe-47ec-bb94-61256ec55b05"><con:settings/><con:config><script>propTestStep = context.testCase.getTestStepByName("Properties")
propTestStep.setPropertyValue("loopIndex","1")
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC Request" id="01539340-3369-45d5-b7d1-7b9e342ca295"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="false" queryTimeout="100" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName xsi:nil="true"/><con:driver>com.mysql.jdbc.Driver</con:driver><con:connectionString>jdbc:mysql://localhost:3306/soapui?user=user&amp;password=PASS_VALUE</con:connectionString><con:password>root</con:password><con:connectionProperties/><con:query>SELECT `fromAccountID`, `amount` FROM `withdraw`</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status" id="fb934e94-0b1e-4ae0-9bbf-1cd239d760fe" name="JDBC Status"/><con:assertion type="JDBC Timeout" id="46739a11-7f94-48b0-9e38-5edb3f23a85c" name="JDBC Timeout"><con:configuration><JDBCtimeout>100</JDBCtimeout></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3a5b3af6-e71d-4528-a70e-4d0578a7286a" name="Contains fromAccountID"><con:configuration><token>fromAccountID</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="JDBCDataSource" id="26faf39f-7a72-4d41-86a5-45ba7004228e"><con:settings/><con:config><script>import java.util.Random
Random random = new Random()
def myTestCase = context.testCase 
propTestStep = myTestCase.getTestStepByName("Properties") 
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def holder = groovyUtils.getXmlHolder("JDBC Request#ResponseAsXML")
def counter = Integer.parseInt(propTestStep.getPropertyValue("loopIndex"))
def fromAccount =  holder.getNodeValue("//Row["+counter+"]/withdraw.fromAccountID/text()") 
def amount = holder.getNodeValue("//Row["+counter+"]/withdraw.amount/text()") 
propTestStep.setPropertyValue("fromAccountID", fromAccount)
propTestStep.setPropertyValue("amount", amount)</script></con:config></con:testStep><con:testStep type="request" id="b902ec44-0582-4856-8713-ba66fdbdfa25" name="doWithdraw"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BankServiceSoapBinding</con:interface><con:operation>doWithdraw</con:operation><con:request name="doWithdraw" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a107bcab-eb92-4e1b-a1e3-50e7e57934e5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/redesigned-invention/services/BankService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:doWithdraw>
         <ser:account_id>${Properties#fromAccountID}</ser:account_id>
         <ser:amount>${Properties#amount}</ser:amount>
      </ser:doWithdraw>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="ef308737-b790-4bb8-86e6-89104342ece7" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="0cdb4b71-07bc-4ced-8d32-fd9310d30af4" name="Not SOAP Fault"/><con:assertion type="XPath Match" id="ea35c4d8-46c5-492d-bd9e-732164ff1252" name="Match content of [account_id]"><con:configuration><path>declare namespace ns1='http://service.com';
//ns1:doWithdrawResponse[1]/ns1:doWithdrawReturn[1]/ns1:account_id[1]/text()</path><content>${Properties#fromAccountID}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="41d202d3-2d51-4fea-8360-6664e2945d45" name="Match content of [amount]"><con:configuration><path>declare namespace ns1='http://service.com';
//ns1:doWithdrawResponse[1]/ns1:doWithdrawReturn[1]/ns1:amount[1]/text()</path><content>${Properties#amount}.0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="39416335-045c-41d0-81e6-a3faa9aa83d7" name="Match content of [description]"><con:configuration><path>declare namespace ns1='http://service.com';
//ns1:doWithdrawResponse[1]/ns1:doWithdrawReturn[1]/ns1:description[1]/text()</path><content>Withdrawn ${Properties#amount}.0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="2208f484-bec9-4644-b220-366d83f95461" name="Match content of [transaction_id] using RegEx"><con:configuration><path>declare namespace ns1='http://service.com';
matches( //ns1:doWithdrawResponse[1]/ns1:doWithdrawReturn[1]/ns1:transaction_id[1]/text(), '3[0-9]{3}' )</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://service.com/BankService/doWithdrawRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="cebc66db-f59c-459e-89ec-680d75705e0d"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>transactionID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>doWithdraw</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://model.com';
declare namespace ns2='http://service.com';
//ns2:transaction_id/text()</con:sourcePath><con:targetType>transactionID</con:targetType><con:targetStep>Properties</con:targetStep><con:targetPath/><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" id="9a3299dc-8f30-4c52-980e-85f3468fc116" name="getAllAccountData"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BankServiceSoapBinding</con:interface><con:operation>getAllAccountData</con:operation><con:request name="getAllAccountData" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="6f75c579-14ed-46c9-bcff-30321eb8df65"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/redesigned-invention/services/BankService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getAllAccountData/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="207c81a5-f50d-4093-825b-6ec0528e0cfd" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="9071723c-fb4c-470f-ab97-8a29a5424bbf" name="Not SOAP Fault"/><con:assertion type="Simple Contains" id="244c4490-eae3-459f-8790-eac5f50906f0" name="Contains"><con:configuration><token>${Properties#accountID}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://service.com/BankService/getAllAccountDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="98bb09ba-7da0-47e6-a1ce-2de5ba6aac70" name="getAllTransactionData"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BankServiceSoapBinding</con:interface><con:operation>getAllTransactionData</con:operation><con:request name="getAllTransactionData" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="849ff1ab-6490-4165-8dcc-acb4ddbe7999"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/redesigned-invention/services/BankService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getAllTransactionData/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c0cfedad-e74c-4728-897e-18a599023482" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="bff46ab5-4224-40c6-8a8b-6ace86f72ac9" name="Not SOAP Fault"/><con:assertion type="Simple Contains" id="ea2966aa-883a-4253-8aeb-0ede6bb09b4e" name="Contains TransactionID"><con:configuration><token>${Properties#transactionID}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="f883881e-b2c6-40f5-b942-c8fdfcda86f3" name="Contains AccountID"><con:configuration><token>${Properties#fromAccountID}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://service.com/BankService/getAllTransactionDataRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Looper" id="e82a3bda-743a-4edf-8de3-3b843b694027"><con:settings/><con:config><script>def myTestCase = context.testCase 
propTestStep = myTestCase.getTestStepByName("Properties") 

def localloopIndex = propTestStep.getPropertyValue("loopIndex") as Integer
def localloopEnd = propTestStep.getPropertyValue("loopEnd") as Integer
if(  localloopIndex   &lt; localloopEnd ){
	propTestStep.setPropertyValue("loopIndex", (localloopIndex  + 1) as String)	
	testRunner.gotoStepByName( "JDBCDataSource" )
}



</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>2d61efe1-c0a0-41aa-9eb6-1477f85d6079</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase>
